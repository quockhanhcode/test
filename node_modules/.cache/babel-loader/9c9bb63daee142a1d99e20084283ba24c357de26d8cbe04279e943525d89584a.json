{"ast":null,"code":"// import React, { useState } from \"react\";\n// import { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n// import \"./style.scss\";\n\n// // const mystyle = {\n// //   width: \"30%\",\n// //   margin: \"0 auto 30px auto\",\n// // };\n\n// const data = [\n//   {\n//     id: \"gary\",\n//     name: \"Gary Goodspeed1\",\n//     thumb:\n//       \"https://images.pexels.com/photos/268533/pexels-photo-268533.jpeg?cs=srgb&dl=pexels-pixabay-268533.jpg&fm=jpg\",\n//   },\n//   {\n//     id: \"gary2\",\n//     name: \"Gary Goodspeed2\",\n//     thumb:\n//       \"https://duhocvietglobal.com/wp-content/uploads/2018/12/dat-nuoc-va-con-nguoi-anh-quoc.jpg\",\n//   },\n//   {\n//     id: \"garyaaaaa\",\n//     thumb:\n//       \"https://images.pexels.com/photos/268533/pexels-photo-268533.jpeg?cs=srgb&dl=pexels-pixabay-268533.jpg&fm=jpg\",\n//   },\n// ];\n\n// const Drag = () => {\n//   const [characters, updateCharacters] = useState(data);\n//   function handleOnDragEnd(result) {\n//     console.log(result);\n//     // if (!result.destination) return;\n//     // const items = Array.from(characters);\n//     // const [reorderedItem] = items.splice(result.source.index, 1);\n//     // items.splice(result.destination.index, 0, reorderedItem);\n//     // updateCharacters(items);\n//   }\n//   return (\n//     <div>\n//       <h1>Drag</h1>\n//       <DragDropContext onDragEnd={handleOnDragEnd}>\n//         <Droppable droppableId=\"characters\">\n//           {(provided) => (\n//             <ul\n//               className=\"characters\"\n//               {...provided.droppableProps}\n//               ref={provided.innerRef}\n//             >\n//               {characters.map(({ id, name, thumb }, index) => {\n//                 return (\n//                   <Draggable key={id} draggableId={id} index={index}>\n//                     {(provided) => (\n//                       <li\n//                         ref={provided.innerRef}\n//                         {...provided.draggableProps}\n//                         {...provided.dragHandleProps}\n//                       >\n//                         <div className=\"characters-thumb\">\n//                           <img src={thumb} alt={`${name} Thumb`} />\n//                         </div>\n//                         <div className=\"text\">\n//                           <p>{name}</p>\n//                         </div>\n//                       </li>\n//                     )}\n//                   </Draggable>\n//                 );\n//               })}\n//               {provided.placeholder}\n//             </ul>\n//           )}\n//         </Droppable>\n//       </DragDropContext>\n//     </div>\n//   );\n// };\n\n// export default Drag;","map":{"version":3,"names":[],"sources":["C:/Users/ASUS/Desktop/test/src/components/drag/Drag.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n// import \"./style.scss\";\r\n\r\n// // const mystyle = {\r\n// //   width: \"30%\",\r\n// //   margin: \"0 auto 30px auto\",\r\n// // };\r\n\r\n// const data = [\r\n//   {\r\n//     id: \"gary\",\r\n//     name: \"Gary Goodspeed1\",\r\n//     thumb:\r\n//       \"https://images.pexels.com/photos/268533/pexels-photo-268533.jpeg?cs=srgb&dl=pexels-pixabay-268533.jpg&fm=jpg\",\r\n//   },\r\n//   {\r\n//     id: \"gary2\",\r\n//     name: \"Gary Goodspeed2\",\r\n//     thumb:\r\n//       \"https://duhocvietglobal.com/wp-content/uploads/2018/12/dat-nuoc-va-con-nguoi-anh-quoc.jpg\",\r\n//   },\r\n//   {\r\n//     id: \"garyaaaaa\",\r\n//     thumb:\r\n//       \"https://images.pexels.com/photos/268533/pexels-photo-268533.jpeg?cs=srgb&dl=pexels-pixabay-268533.jpg&fm=jpg\",\r\n//   },\r\n// ];\r\n\r\n// const Drag = () => {\r\n//   const [characters, updateCharacters] = useState(data);\r\n//   function handleOnDragEnd(result) {\r\n//     console.log(result);\r\n//     // if (!result.destination) return;\r\n//     // const items = Array.from(characters);\r\n//     // const [reorderedItem] = items.splice(result.source.index, 1);\r\n//     // items.splice(result.destination.index, 0, reorderedItem);\r\n//     // updateCharacters(items);\r\n//   }\r\n//   return (\r\n//     <div>\r\n//       <h1>Drag</h1>\r\n//       <DragDropContext onDragEnd={handleOnDragEnd}>\r\n//         <Droppable droppableId=\"characters\">\r\n//           {(provided) => (\r\n//             <ul\r\n//               className=\"characters\"\r\n//               {...provided.droppableProps}\r\n//               ref={provided.innerRef}\r\n//             >\r\n//               {characters.map(({ id, name, thumb }, index) => {\r\n//                 return (\r\n//                   <Draggable key={id} draggableId={id} index={index}>\r\n//                     {(provided) => (\r\n//                       <li\r\n//                         ref={provided.innerRef}\r\n//                         {...provided.draggableProps}\r\n//                         {...provided.dragHandleProps}\r\n//                       >\r\n//                         <div className=\"characters-thumb\">\r\n//                           <img src={thumb} alt={`${name} Thumb`} />\r\n//                         </div>\r\n//                         <div className=\"text\">\r\n//                           <p>{name}</p>\r\n//                         </div>\r\n//                       </li>\r\n//                     )}\r\n//                   </Draggable>\r\n//                 );\r\n//               })}\r\n//               {provided.placeholder}\r\n//             </ul>\r\n//           )}\r\n//         </Droppable>\r\n//       </DragDropContext>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Drag;\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}