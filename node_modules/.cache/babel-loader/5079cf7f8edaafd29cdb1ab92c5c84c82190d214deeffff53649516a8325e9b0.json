{"ast":null,"code":"import { GridLogicOperator } from '../../../models/gridFilterItem';\nexport const getDefaultGridFilterModel = () => ({\n  items: [],\n  logicOperator: GridLogicOperator.And,\n  quickFilterValues: [],\n  quickFilterLogicOperator: GridLogicOperator.And\n});\n\n/**\r\n * @param {GridRowId} rowId The id of the row we want to filter.\r\n * @param {(filterItem: GridFilterItem) => boolean} shouldApplyItem An optional callback to allow the filtering engine to only apply some items.\r\n */\n\n/**\r\n * Visibility status for each row.\r\n * A row is visible if it is passing the filters AND if its parents are expanded.\r\n * If a row is not registered in this lookup, it is visible.\r\n */","map":{"version":3,"names":["GridLogicOperator","getDefaultGridFilterModel","items","logicOperator","And","quickFilterValues","quickFilterLogicOperator"],"sources":["C:/Users/KhanhHQ/Desktop/test/node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterState.js"],"sourcesContent":["import { GridLogicOperator } from '../../../models/gridFilterItem';\r\nexport const getDefaultGridFilterModel = () => ({\r\n  items: [],\r\n  logicOperator: GridLogicOperator.And,\r\n  quickFilterValues: [],\r\n  quickFilterLogicOperator: GridLogicOperator.And\r\n});\r\n\r\n/**\r\n * @param {GridRowId} rowId The id of the row we want to filter.\r\n * @param {(filterItem: GridFilterItem) => boolean} shouldApplyItem An optional callback to allow the filtering engine to only apply some items.\r\n */\r\n\r\n/**\r\n * Visibility status for each row.\r\n * A row is visible if it is passing the filters AND if its parents are expanded.\r\n * If a row is not registered in this lookup, it is visible.\r\n */"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,gCAAgC;AAClE,OAAO,MAAMC,yBAAyB,GAAGA,CAAA,MAAO;EAC9CC,KAAK,EAAE,EAAE;EACTC,aAAa,EAAEH,iBAAiB,CAACI,GAAG;EACpCC,iBAAiB,EAAE,EAAE;EACrBC,wBAAwB,EAAEN,iBAAiB,CAACI;AAC9C,CAAC,CAAC;;AAEF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}